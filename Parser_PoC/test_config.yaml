scheduling:
  start_date: &root_start_date '2025-01-01T00:00'
  end_date: &root_end_date '2027-01-01T00:00'
  graph:
    init:
      tasks:
        Extpar:
          input:
            - obs data
          output:
            - extpar file
    icon:
      period: 'P2M'
      # period: 'P3M'
      # period: 'P4M'
      # period: 'P6M'
      tasks:
        preproc:
          input:
            - grid file
            - extpar file:
                date: *root_start_date
            - ERA5
          output:
            - icon input
          depends:
            - ICON:
                lag: '-P4M'
                # lag: '-P6M'
                # lag: '-P8M'
                # lag: '-P12M'
        ICON:
          input:
            - grid file
            - icon input
            - restart:
                lag: '-P2M'
                # lag: '-P3M'
                # lag: '-P4M'
                # lag: '-P6M'
          output:
            - stream 1
            - stream 2
            - restart
        postproc 1:
          input:
            - stream 1
          output:
            - postout 1
        store & clean 1:
          input:
            - postout 1
            - stream 1
            - icon input
          output:
            - stored data 1
    yearly:
      period: 'P1Y'
      tasks:
        postproc 2:
          input:
            - stream 2:
                lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
                # lag: ['P0M', 'P3M', 'P6M', 'P9M']
                # lag: ['P0M', 'P4M', 'P8M']
                # lag: ['P0M', 'P6M']
          output:
            - postout 2
        store & clean 2:
          input:
            - postout 2
            - stream 2:
                lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
                # lag: ['P0M', 'P3M', 'P6M', 'P9M']
                # lag: ['P0M', 'P4M', 'P8M']
                # lag: ['P0M', 'P6M']
          output:
            - stored data 2
runtime:
  # Each task and piece of data (input and output of tasks) used to
  # define the graph is described in that section
  tasks:
    root:
      # All tasks inherit the root task properties
      host: santis
      account: g110
    Extpar:
      plugin: extpar
      exe: path/to/exe
      config: path/to/namelists/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
      nodes: 1
      walltime: '00:02:00'
    preproc:
      plugin: ICON_tools
      nodes: 4
      walltime: '00:02:00'
      config: path/to/config/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
    ICON:
      nodes: 40
      walltime: '24:00:00'
      config: path/to/namelists/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
      exe: path/to/icon
    postproc 1:
      nodes: 2
      walltime: '00:05:00'
      src: path/to/src/dir
      exe: "python3 main_script_ocn.py"
      conda_env: path/to/yaml/env/file
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
    postproc 2:
      nodes: 4
      walltime: '00:05:00'
      src: path/to/src/dir
      exe: "python3 main_script_atm.py"
      conda_env: path/to/yaml/env/file
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
    store & clean 1:
      nodes: 1
      walltime: '00:01:00'
      scipt: path/to/script
    store & clean 2:
      nodes: 1
      walltime: '00:01:00'
      scipt: path/to/script

  data:
    # Properties of data nodes
    grid file: {type: file, abs_path: /path/to/grid/file.nc}
    obs data: {type: dir, abs_path: /some/where}
    ERA5: {type: dir, abs_path: /some/where/else}
    extpar file: {type: file, rel_path: output}
    icon input: {rel_path: output}
    restart: {type: ICON_restart, format: ncdf, rel_path: restart}
    stream 1: {type: ICON_output_stream, rel_path: output_1}
    stream 2: {type: ICON_output_stream, rel_path: output_2}
    postout 1: {'rel_path': output}
    postout 2: {'rel_path': output}
    stored data 1: {'abs_path': /store/some/where_1}
    stored data 2: {'abs_path': /store/some/where_2}
