from _typeshed import Incomplete
from dataclasses import dataclass
from datetime import datetime
from decimal import Decimal
from isoduration.formatter import format_duration as format_duration
from isoduration.operations import add as add

@dataclass
class DateDuration:
    years: Decimal = ...
    months: Decimal = ...
    days: Decimal = ...
    weeks: Decimal = ...
    def __neg__(self) -> DateDuration: ...
    def __init__(self, years=..., months=..., days=..., weeks=...) -> None: ...

@dataclass
class TimeDuration:
    hours: Decimal = ...
    minutes: Decimal = ...
    seconds: Decimal = ...
    def __neg__(self) -> TimeDuration: ...
    def __init__(self, hours=..., minutes=..., seconds=...) -> None: ...

class Duration:
    date: Incomplete
    time: Incomplete
    def __init__(self, date_duration: DateDuration, time_duration: TimeDuration) -> None: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other: object) -> bool: ...
    def __neg__(self) -> Duration: ...
    def __add__(self, other: datetime) -> datetime: ...
    __radd__ = __add__
    def __sub__(self, other: object) -> None: ...
    def __rsub__(self, other: datetime) -> datetime: ...
