---
start_date: &root_start_date '2025-01-01T00:00'
end_date: &root_end_date '2027-01-01T00:00'
cycles:
  - init:
      tasks:
        - extpar:
            inputs: [obs_data]
            outputs: [extpar_file]
  - icon_bimonthly:
      start_date: *root_start_date
      end_date: *root_end_date
      period: 'P2M'
      tasks:
        - preproc:
            inputs: [grid_file, extpar_file, ERA5]
            outputs: [icon_input]
            wait_on:
              - icon:
                  when:
                    after: '2025-03-01T00:00'
                  lag: '-P4M'
        - icon:
            inputs:
              - grid_file
              - icon_input
              - icon_restart:
                  when:
                    after: *root_start_date
                  lag: '-P2M'
            outputs: [stream_1, stream_2, icon_restart]
        - postproc_1:
            inputs: [stream_1]
            outputs: [postout_1]
        - store_and_clean_1:
            inputs: [postout_1, stream_1, icon_input]
            outputs: [stored_data_1]
  - yearly:
      start_date: *root_start_date
      end_date: *root_end_date
      period: 'P1Y'
      tasks:
        - postproc_2:
            inputs:
              - stream_2:
                  lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
                  arg_option: --input
            outputs: [postout_2]
        - store_and_clean_2:
            inputs:
              - postout_2
              - stream_2:
                  lag: ['P0M', 'P2M', 'P4M', 'P6M', 'P8M', 'P10M']
            outputs:
              - stored_data_2
# Each task and piece of data (input and output of tasks) used to
# define the graph is described in that section
tasks:
  - ROOT:
      # All tasks inherit the root task properties
      host: santis
      account: g110
  - extpar:
      plugin: extpar
      command: $PWD/examples/files/scripts/extpar
      command_option: '--verbose'  # todo implement support
      input_arg_options:
        obs_data: '--input'
      config: path/to/namelists/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
      nodes: 1
      walltime: 00:02:00
  - preproc:
      plugin: AiiDA Shell
      command: $PWD/examples/files/scripts/cleanup.sh
      input_arg_options:
        grid_file: '-g'
        extpar_file : '-p'
        ERA5: '-e'
      nodes: 4
      walltime: 00:02:00
      config: path/to/config/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
  - icon:
      plugin: icon
      command: $PWD/examples/files/scripts/icon
      input_arg_options:
        grid_file: '-g'
        icon_input: '--input'
      nodes: 40
      walltime: 23:59:59
      config: path/to/namelists/dir
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
  - postproc_1:
      plugin: AiiDA Shell
      command: $PWD/examples/files/scripts/main_script_ocn.sh
      input_arg_options:
        stream_1: '--input'
      nodes: 2
      walltime: 00:05:00
      conda_env: path/to/yaml/env/file
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
  - postproc_2:
      plugin: AiiDA Shell
      command: $PWD/examples/files/scripts/main_script_atm.sh
      input_arg_options:
        stream_2: '--input'
      nodes: 2
      walltime: 00:05:00
      src: path/to/src/dir
      conda_env: path/to/yaml/env/file
      uenv:
        squashfs: path/to/squashfs
        mount_point: runtime/mount/point
  - store_and_clean_1:
      plugin: AiiDA Shell
      command: $PWD/examples/files/scripts/post_clean.sh
      input_arg_options:
        postout_1: '--input'
        stream_1: '--stream'
        icon_input: '--icon_input'
      nodes: 1
      walltime: 00:01:00
  - store_and_clean_2:
      plugin: AiiDA Shell
      command: $PWD/examples/files/scripts/post_clean.sh
      input_arg_options:
        postout_2: '--input'
      nodes: 1
      walltime: 00:01:00
data:
  available:
    - grid_file:
        type: file
        src: $PWD/examples/files/data/grid
    - obs_data:
        type: file
        src: $PWD/examples/files/data/obs_data
    - ERA5:
        type: file
        src: $PWD/examples/files/data/era5
  generated:
    - extpar_file:
        type: file
        src: output
    - icon_input:
        type: file
        src: output
    - icon_restart:
        type: file
        format: ncdf
        src: restart
    - stream_1:
        type: file
        src: output_1
    - stream_2:
        type: file
        src: output_2
    - postout_1:
        type: file
        src: postout
    - postout_2:
        type: file
        src: postout
    - stored_data_1:
        type: file
        src: stored_data
    - stored_data_2:
        type: file
        src: stored_data
